#!/usr/bin/env groovy
import org.jenkinsci.plugins.pipeline.modeldefinition.Utils

node("nix") {
    checkout scm
    stage("prepare") {

        stage("collect props") {
            env.LSLEASES_VERSION =  sh(script: "git describe --always --tags", returnStdout: true).trim()
        }

        stage("create manpage") {
            sh "nix-build build/default.nix -A manpage"
            dir("result") {
                stash name: "manpage", includes: "*"
            }
        }
    }

}


parallel(
    "freebsd": {
        node("freebsd") {
          env.FREEBSD_PACKAGE = "lsleases-${LSLEASES_VERSION}-amd64-freebsd.txz"
          dir("build-work/freebsd") {
            checkout scm

            unstash name: "manpage"
            sh "build/freebsd/build.sh $FREEBSD_PACKAGE"

            echo "sign package"
            sign(FREEBSD_PACKAGE, GPG_PASSPHRASE)

            echo "archive artifacts"
            archiveArtifacts artifacts: "${FREEBSD_PACKAGE}, ${FREEBSD_PACKAGE}.sig"
         }
       }
    },
    "deb": {
        node("nix") {
            dir("build-work/deb") {
                buildWithNix("deb", "i386")
                buildWithNix("deb", "amd64")
            }
        }
    },
    "rpm": {
        node("nix") {
            dir("build-work/rpm") {
                buildWithNix("rpm", "i386")
                buildWithNix("rpm", "amd64")
            }
        }
    }
)


def buildWithNix(String pkg, String arch) {
  env.PACKAGE = "lsleases-${LSLEASES_VERSION}-${arch}.${pkg}"

  checkout scm
  unstash name: "manpage"

  echo "build ${PACKAGE}"
  sh "nix-build build/default.nix -A package-$pkg --argstr arch $arch"
  sh "cp result/${PACKAGE} ."

  echo "sign ${PACKAGE}"
  sign("${PACKAGE}", GPG_PASSPHRASE)

  echo "archive artifacts: ${PACKAGE}, ${PACKAGE}.sig"
  archiveArtifacts artifacts: "${PACKAGE}, ${PACKAGE}.sig"

}

def sign(String fileName, String passphrase) {
    String cmd = "gpg --pinentry-mode loopback --passphrase ${passphrase} " +
                 " --detach-sign --output ${fileName}.sig ${fileName}"

    echo "write signature in ${fileName}.sig"
    // execute without logging
    sh "#!/bin/sh -e\n${cmd}"
}
