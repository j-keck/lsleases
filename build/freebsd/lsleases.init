#!/bin/sh
#
#

# PROVIDE: lsleases
# REQUIRE: networking
# BEFORE:  LOGIN
#

#
# Set the following settings in /etc/rc.conf or /etc/rc.conf.local
#
# lsleases_enable (bool):
#   Set to "NO" by default.
#   Set it to "YES" to enable lsleases
#
# lsleases_flags (str):
#   Set to "" by default
#   Flags to use
#


. /etc/rc.subr

name="lsleases"
daemon_cmd="/usr/local/bin/lsleasesd"
ctrl_cmd="/usr/local/bin/lsleases"
daemon_user="nobody"
logfile="/var/log/${name}.log"
run_datadir="/var/run/${name}"
app_datadir="/var/cache/${name}"
start_cmd="${name}_start"
stop_cmd="${name}_stop"
rcvar=`set_rcvar`

load_rc_config $name
: ${lsleases_enable:=no}
: ${lsleases_flags:="-k -log-timestamps"}



lsleases_start(){
    # create logfile and set ownership
    touch ${logfile} && chown ${daemon_user} ${logfile}

    # create app datadir and set ownership
    mkdir -p ${app_datadir} && chown ${daemon_user} ${app_datadir}

    # create run datadir and set ownership
    mkdir -p ${run_datadir} && chown ${daemon_user} ${run_datadir}


    # startup
    daemon -u ${daemon_user} ${daemon_cmd} ${lsleases_flags} > ${logfile} 2>&1

    sleep 0.5
    ${command} > /dev/null 2>&1
    if [ $? != 0 ]; then
        warn "not started - see ${logfile}"
    fi
}

lsleases_stop(){
    ${ctrl_cmd} -x

    # Remove sock file
    rm -f ${app_datadir}/${name}.sock
}


run_rc_command "$1"

